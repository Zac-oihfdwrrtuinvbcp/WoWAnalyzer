import SPELLS from 'common/SPELLS';
import { AnyEvent, EventType } from 'parser/core/Events';
import EventsNormalizer from 'parser/core/EventsNormalizer';

const CAST_MIN_GCD_MS = 800;

//--TODO: might not want to straight up remove the events but maybe change them to damage events

// This normalizer remove the subsequent pistol shots cast events generated by "fan the hammer" talent
// that are not diferenciated from player casted pistol shots in log events
class FanTheHammerNormalizer extends EventsNormalizer {
  private pistolShotGCDEvent: AnyEvent | undefined;

  normalize(events: AnyEvent[]) {
    const fixedEvents: AnyEvent[] = [];
    const pistolShotCastId = SPELLS.PISTOL_SHOT.id;

    events.forEach((event: AnyEvent, idx: number) => {
      //Wwe only want to check pistol shots casts
      fixedEvents.push(event);

      if (event.type !== EventType.Cast) {
        return;
      }

      const spellId = event.ability.guid;
      if (spellId !== pistolShotCastId) {
        return;
      }

      // set the initial gcd event for the very first PS cast
      if (!this.pistolShotGCDEvent) {
        this.pistolShotGCDEvent = event;
        return;
      }

      // if a pistol shot was cast while the gcd was still running we know that its a fth that auto sent
      // outlaw gcd is fixed at 1000ms and 800ms during ADR, 
      // currently just checking if the current remaining gcd is under 800ms, shouldn't be an issue for now
      if (event.timestamp - this.pistolShotGCDEvent.timestamp < CAST_MIN_GCD_MS) {

        //for now deleting the event, probably would want to generate a damage event?
        fixedEvents.pop();
      } else { // if the last ps gcd event was more than 1gcd ago we set the gcd variable
        this.pistolShotGCDEvent = event;
      }
    });
    return fixedEvents;
  }
}
export default FanTheHammerNormalizer;
